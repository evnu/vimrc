" vim: set ft=vim:

" {{{ Initialization
" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" let Vundle manage Vundle, required
Plugin 'gmarik/Vundle.vim'

" }}}

Plugin 'tpope/vim-pathogen'

Plugin 'tpope/vim-dispatch'

" {{{ Style

"{{{ font
Plugin 'drmikehenry/vim-fontsize'
"}}}

" {{{ Statusline
"Plugin 'bling/vim-airline'
set laststatus=2 " to show airline when opening a file
" }}}

"{{{ Colorschemes
Plugin 'tomasr/molokai'
Plugin 'flazz/vim-colorschemes'
Plugin 'gosukiwi/vim-atom-dark'
"}}}

" add markers in the quickfix column
Plugin 'kshenoy/vim-signature'
"}}}

" {{{ Navigation
Plugin 'scrooloose/nerdtree'
" }}}

"{{{ Completion
Plugin 'Shougo/neocomplete.vim'
" Enable neocomplete
let g:neocomplete#enable_at_startup = 1
let g:neocomplete#enable_smart_case = 1
let g:neocomplete#sources#syntax#min_keyword_length = 3
Plugin 'Shougo/neosnippet'
Plugin 'Shougo/neosnippet-snippets'

augroup neosnippet
    au!
    au FileType neosnippet :set tw=0 nowrap
augroup END

" For snippet_complete marker.
if has('conceal')
  set conceallevel=2 concealcursor=i
endif

Plugin 'kien/ctrlp.vim'
if executable('ag')
  " Use ag in CtrlP for listing files. Lightning fast and respects .gitignore
  let g:ctrlp_user_command = 'ag %s -l --nocolor -g ""'

  " ag is fast enough that CtrlP doesn't need to cache
  let g:ctrlp_use_caching = 0
endif
"}}}

"{{{ Formatting
" Tabularize stuff
Plugin 'godlygeek/tabular'

Plugin 'tpope/vim-surround'
"}}}

"{{{ Syntax
" Syntax checks
Plugin 'scrooloose/syntastic'

" Markdown
Plugin 'plasticboy/vim-markdown'
let g:vim_markdown_folding_disabled=1

" Filetype for trac
Plugin 'tracwiki'
"}}}

" {{{ Tags
" Tagbar, setup for <F8>
Plugin 'majutsushi/tagbar'
nnoremap <F8> :TagbarToggle<CR>
" Add make as indicated in https://github.com/majutsushi/tagbar/wiki
let g:tagbar_type_make = {
            \ 'kinds':[
                \ 'm:macros',
                \ 't:targets'
            \ ]
            \}
" }}}

" Project-specific settings
Plugin 'embear/vim-localvimrc'
let g:localvimrc_ask=0

" {{{ Movement
Plugin 'unblevable/quick-scope'
" }}}

" {{{ Note-taking

" prereq for vim-notes
Plugin 'xolox/vim-misc'
Plugin 'xolox/vim-notes'

Plugin 'fmoralesc/vim-pad'
let g:pad#dir='~/.vim/notes'

" }}}

" {{{ handling dates
Plugin 'tpope/vim-speeddating.git'
" }}}

" {{{ REPL
Plugin 'jpalardy/vim-slime'
" }}}

" {{{ Erlang
Plugin 'vim-erlang/vim-erlang-runtime'
Plugin 'fishcakez/vim-dialyzer'
Plugin 'ppikula/vim-wrangler'
Plugin 'vim-erlang/vim-erlang-tags'
" }}}

" {{{ Working with Undos
Plugin 'mbbill/undotree'
" }}}

"{{{ Working with VCSs

Plugin 'tpope/vim-fugitive'
Plugin 'jlfwong/vim-mercenary'

"}}}

"{{{ Working with Diffs
Plugin 'AndrewRadev/linediff.vim'
"}}}

" {{{ Working with Documentation
Plugin 'thinca/vim-ref'
" }}}

" {{{ Drawing
Plugin 'vim-scripts/DrawIt'
" }}}

" {{{ Languages

Plugin 'rust-lang/rust.vim'
Plugin 'cespare/vim-toml'

" }}}
