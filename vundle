" vim: set ft=vim:

" {{{ Initialization
" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" let Vundle manage Vundle, required
Plugin 'gmarik/Vundle.vim'

" }}}

Plugin 'tpope/vim-pathogen'

Plugin 'tpope/vim-dispatch'

" {{{ Unicode

Plugin 'chrisbra/unicode.vim'

" }}}

" {{{ Style

"{{{ font
Plugin 'drmikehenry/vim-fontsize'
"}}}

" {{{ Statusline
set laststatus=2 " to show airline when opening a file
" }}}

"{{{ Colorschemes
Plugin 'tomasr/molokai'
Plugin 'fxn/vim-monochrome'
Plugin 'romainl/Apprentice'

"}}}

"{{{ Indented Lines
Plugin 'Yggdroot/indentLine'
"}}}

"}}}

" {{{ Lint
Plugin 'w0rp/ale'
" Keep gutter open
let g:ale_sign_column_always = 1
nmap <silent> <Leader>ap <Plug>(ale_previous_wrap)
nmap <silent> <Leader>an <Plug>(ale_next_wrap)
" }}}

" {{{ Navigation
Plugin 'scrooloose/nerdtree'
Plugin 'junegunn/fzf'
Plugin 'junegunn/fzf.vim'

nnoremap <SPACE>p :GFiles<CR>
nnoremap <SPACE>f :Files<CR>
nnoremap <SPACE>b :Buffers<CR>
nnoremap <SPACE>t :Tags<CR>

Plugin 'gabesoft/vim-ags'
" }}}

"{{{ Formatting
" Tabularize stuff
Plugin 'godlygeek/tabular'

Plugin 'tpope/vim-surround'
"}}}

"{{{ Syntax
" Markdown
Plugin 'plasticboy/vim-markdown'
let g:vim_markdown_folding_disabled=1
" Disable concealing for markdown
let g:vim_markdown_conceal = 0
" Do not emphasize across multipl lines
let g:vim_markdown_emphasis_multiline = 0

" Filetype for trac
Plugin 'tracwiki'

" Vim's python indent is not good
Plugin 'hynek/vim-python-pep8-indent'
"}}}

" {{{ Tags
" Tagbar, setup for <F8>
Plugin 'majutsushi/tagbar'
nnoremap <F8> :TagbarToggle<CR>
" Add make as indicated in https://github.com/majutsushi/tagbar/wiki
let g:tagbar_type_make = {
            \ 'kinds':[
                \ 'm:macros',
                \ 't:targets'
            \ ]
            \}

" Add Elixir as indicated in https://github.com/majutsushi/tagbar/wiki
let g:tagbar_type_elixir = {
    \ 'ctagstype' : 'elixir',
    \ 'kinds' : [
        \ 'f:functions',
        \ 'functions:functions',
        \ 'c:callbacks',
        \ 'd:delegates',
        \ 'e:exceptions',
        \ 'i:implementations',
        \ 'a:macros',
        \ 'o:operators',
        \ 'm:modules',
        \ 'p:protocols',
        \ 'r:records',
        \ 't:tests'
    \ ]
\ }

Plugin 'mhinz/vim-mix-format'
" }}}

" Project-specific settings
Plugin 'embear/vim-localvimrc'
let g:localvimrc_ask=0

" {{{ Note-taking

" prereq for vim-notes
Plugin 'xolox/vim-misc'
Plugin 'xolox/vim-notes'

" }}}

" {{{ Erlang
Plugin 'vim-erlang/vim-erlang-runtime'
Plugin 'ppikula/vim-wrangler'
Plugin 'vim-erlang/vim-erlang-tags'
Plugin 'vim-erlang/vim-erlang-omnicomplete'
" }}}

" {{{ Working with Undos
Plugin 'mbbill/undotree'
" }}}

"{{{ Working with VCSs

Plugin 'tpope/vim-fugitive'
Plugin 'shumphrey/fugitive-gitlab.vim'
Plugin 'tpope/vim-rhubarb'
Plugin 'airblade/vim-gitgutter'
Plugin 'evnu/vim-mercenary'

"}}}

"{{{ Working with Diffs
Plugin 'AndrewRadev/linediff.vim'
"}}}

" {{{ Working with Documentation
Plugin 'thinca/vim-ref'
" }}}

" {{{ Scratchpads

Plugin 'metakirby5/codi.vim'

" }}}

" {{{ Wrapping
Plugin 'FooSoft/vim-argwrap'
nnoremap <silent> <leader>a :ArgWrap<CR>
" }}}

" {{{ Drawing
Plugin 'vim-scripts/DrawIt'
" }}}

" {{{ Languages

Plugin 'rust-lang/rust.vim'
let g:rustfmt_autosave = 1

Plugin 'cespare/vim-toml'
" Note: install rust-racer from AUR
Plugin 'racer-rust/vim-racer'

Plugin 'elixir-lang/vim-elixir'
Plugin 'slashmili/alchemist.vim'

Plugin 'saltstack/salt-vim'

" }}}

" {{{ Help and Documentation
" View info pages
Plugin 'alx741/vinfo'
" }}}

" {{{ Testing
Plugin 'janko-m/vim-test'
nmap <silent> <leader>t :TestNearest<CR>
let test#strategy = "dispatch"
" }}}
